SUBROUTINE SLV.V.CONT.TRX.CS

*-----------------------------------------------------------------------------
* <Rating>65</Rating>
*-----------------------------------------------------------------------------
*
*-----------------------------------------------------------------------------
* Modification History :
*-----------------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.EB.SLV.CTA.SIMPLIFICADA.TXN
    $INSERT I_F.FUNDS.TRANSFER
    $INSERT I_F.ACCOUNT
    $INSERT I_F.AA.ACCOUNT
    $INSERT I_F.AA.ARRANGEMENT
    $INSERT I_F.TELLER
    $INSERT I_F.TELLER.FINANCIAL.SERVICES
    $INSERT I_F.EB.SLV.GLOBAL.PARAM
    $INSERT I_TSS.COMMON
    $INSERT I_GTS.COMMON
*-----------------------------------------------------------------------------

    IF OFS$OPERATION EQ 'PROCESS' AND V$FUNCTION EQ 'I' THEN
        GOSUB INIT
        GOSUB OPEN.FILE
        GOSUB CAT.SIMP
        GOSUB VALIDAR.CONTADOR
        GOSUB VAR
        GOSUB ASIGNAR.CUENTA
        
    END ;*END IF OFS$OPERATION EQ 'PROCESS' AND V$FUNCTION EQ 'I' THEN
    ELSE IF OFS$OPERATION EQ 'PROCESS' AND V$FUNCTION EQ 'R' THEN
    CALL SLV.R.TRX.CTA.SIM
    END ;*END ELSE OFS$OPERATION EQ 'PROCESS' AND V$FUNCTION EQ 'I' THEN
    RETURN

INIT:
    DTL.APP.FN        = 'F.EB.SLV.CTA.SIMPLIFICADA.TXN'
    DTL.APP.F         = ''
    ACC.FN            = 'F.ACCOUNT'
    ACC.F             = ''
    FN.TABLE.PA = 'F.EB.SLV.GLOBAL.PARAM'
    F.TABLE.PA = ''
    RETURN

OPEN.FILE:
    CALL OPF(DTL.APP.FN,DTL.APP.F)
    CALL OPF(ACC.FN,ACC.F)
    CALL OPF(FN.TABLE.PA, F.TABLE.PA)    
    RETURN

VAR:
    FT.ID              = ID.NEW
    YEAR.MONTH         = TODAY[1,4]:TODAY[5,2]
    RETURN

ASIGNAR.CUENTA:	
    ACC.SIMPLIFICADA  = R.NEW(FT.CREDIT.ACCT.NO)
    GOSUB PROCESS
    ACC.SIMPLIFICADA = R.NEW(FT.DEBIT.ACCT.NO)
    GOSUB PROCESS
    ACC.SIMPLIFICADA = R.NEW(TT.TE.ACCOUNT.1)
    GOSUB PROCESS
    ACC.SIMPLIFICADA = R.NEW(TT.TE.ACCOUNT.2)
    GOSUB PROCESS

RETURN

PROCESS:
;*VALIDAMOS QUE LA CUENTA SEA UNA CUENTA SIMPLIFICADA
    CALL F.READ(ACC.FN,ACC.SIMPLIFICADA,ACC.R,ACC.F,ACC.ERR)

    IF ACC.R<AC.CATEGORY> EQ CATEGORY.SIMP THEN

        ;*VALIDAMOS SI LA CUENTA A TRANSACCIONAR YA POSEE REGISTRO EN LA APLICACION EB.SLV.CTA.SIMPLIFICADA.TXN
        CALL F.READ(DTL.APP.FN,ACC.SIMPLIFICADA,DTL.R,DTL.APP.F,DTL.ERR)
        IF DTL.ERR NE '' THEN
        END 
        ELSE
            TRX.ARR = DTL.R<EB.SLV25.TRX.DETALLE>
            FINDSTR YEAR.MONTH IN TRX.ARR SETTING V.FLD, V.VAL THEN
                    CONTADOR      = DTL.R<EB.SLV25.CONTADOR.TRX>
                    IF CONTADOR GE LIMITE.TRAN THEN
                    STRERR ='EB-SIMP004'
           			GOSUB CRT_ERROR
                    END
            END 
         END 
    END 
    RETURN

CAT.SIMP:

    FN.AA.PRODUCT.DESIGNER = 'F.AA.PRD.DES.ACCOUNT'
    F.AA.PRODUCT.DESIGNER = ''
    CALL OPF(FN.AA.PRODUCT.DESIGNER,F.AA.PRODUCT.DESIGNER)
    Y.PRODUCTO='CUENTA.AHORRO.SIM'
    SELECT.PROD.DES = "SELECT " : FN.AA.PRODUCT.DESIGNER : " WITH @ID LIKE '" : Y.PRODUCTO : "...'"
    CALL EB.READLIST(SELECT.PROD.DES, PROD.DES,'',NO.REC.PROD.DES, ERR.REC.PROD.DES)
    IF NO.REC.PROD.DES NE 0 THEN
        CALL F.READ(FN.AA.PRODUCT.DESIGNER,PROD.DES, PROD.DES.REC, F.AA.PRODUCT.DESIGNER, ERR.REC1)
        IF PROD.DES.REC THEN


            CALL F.READ(FN.AA.PRODUCT.DESIGNER,PROD.DES, PROD.DES.REC, F.AA.PRODUCT.DESIGNER, ERR.REC1)
            IF PROD.DES.REC THEN
                CATEGORY.SIMP = PROD.DES.REC<AA.AC.CATEGORY> ;*Obtener el parent para luego ir a traer sus propiedades
            END

        END

    END
    RETURN
    
    
 VALIDAR.CONTADOR:
    PARAM.DIA = 'CTA.SIMPLIFICADA.TRX.MES'
    CALL F.READ(FN.TABLE.PA, PARAM.DIA, R.TABLE.PA, F.TABLE.PA, F.ERR.PA)
    LIMITE.TRAN=R.TABLE.PA<EB.SLV39.VALOR.PARAM>
    
 RETURN

CRT_ERROR:
    AV 	= 1
    ETEXT = STRERR
    CALL STORE.END.ERROR
    RETURN

    END
