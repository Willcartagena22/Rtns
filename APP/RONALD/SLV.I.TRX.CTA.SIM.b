*-----------------------------------------------------------------------------
* <Rating>-11</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE SLV.I.TRX.CTA.SIM
*-----------------------------------------------------------------------------
*
*-----------------------------------------------------------------------------
* Modification History :
*-----------------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.EB.SLV.CTA.SIMPLIFICADA.TXN
    $INSERT I_F.FUNDS.TRANSFER
    $INSERT I_F.ACCOUNT
    $INSERT I_TSS.COMMON
    $INSERT I_GTS.COMMON
    $INSERT I_F.AA.ACCOUNT
    $INSERT I_F.AA.ARRANGEMENT
    $INSERT I_F.EB.SLV.CUENTA.SIMP.TRX.DIA
*-----------------------------------------------------------------------------
    OFS$OPERATION='PROCESS'
    V$FUNCTION='I'
    IF OFS$OPERATION EQ 'PROCESS' AND V$FUNCTION EQ 'I' THEN
        GOSUB INIT
        GOSUB OPEN.FILE
        GOSUB VALIDAR.ACUMULADO.DIA
        GOSUB CAT.SIMP
        GOSUB VAR
        GOSUB PROCESS.DEBIT
        GOSUB PROCESS
    END ;*END IF OFS$OPERATION EQ 'PROCESS' AND V$FUNCTION EQ 'I' THEN
    ELSE IF OFS$OPERATION EQ 'PROCESS' AND V$FUNCTION EQ 'R' THEN
    CALL SLV.R.TRX.CTA.SIM
    END ;*END ELSE OFS$OPERATION EQ 'PROCESS' AND V$FUNCTION EQ 'I' THEN
    RETURN

INIT:
    DTL.APP.FN        = 'F.EB.SLV.CTA.SIMPLIFICADA.TXN'
    DTL.APP.F         = ''
    ACC.FN            = 'F.ACCOUNT'
    ACC.F             = ''
    FN.TRX.DIA= 'F.EB.SLV.CUENTA.SIMP.TRX.DIA'
    F.TRX.DIA = ''
    RETURN

OPEN.FILE:
    CALL OPF(DTL.APP.FN,DTL.APP.F)
    CALL OPF(ACC.FN,ACC.F)
    CALL OPF(FN.TRX.DIA,F.TRX.DIA)
    RETURN

VAR:
    FT.ID              = ID.NEW
    ACC.SIMPLIFICADA   = R.NEW(FT.CREDIT.ACCT.NO)
    ACC.SIMPLIFICADA.D = R.NEW(FT.DEBIT.ACCT.NO)
    FT.AMOUNT          = R.NEW(FT.DEBIT.AMOUNT)
    FLAG.CREDIT        = 'C'
    FLAG.DEBIT         = 'D'
    YEAR_MONTH         = TODAY[1,4]:TODAY[5,2]
    NEW_TRX.DETAIL     = YEAR_MONTH:'~':FT.AMOUNT
    NEW_TRX.DETAIL.D   = YEAR_MONTH:'~':FT.AMOUNT
    
    FT.AMOUNT='900'
    MONTO='900'
    ACC.SIMPLIFICADA='10000000988764'
    RETURN


PROCESS.DEBIT:
;*VALIDAMOS QUE LA CUENTA DE CREDITO SEA UNA CUENTA SIMPLIFICADA
    CALL F.READ(ACC.FN,ACC.SIMPLIFICADA.D,ACC.R.D,ACC.F,ACC.ERR)

    IF ACC.R.D<AC.CATEGORY> EQ CATEGORY.SIMP THEN
    		ACC.SIMP.DIA=ACC.SIMPLIFICADA.D
		GOSUB VALIDAR.MONTO.DIA

        ;*VALIDAMOS SI LA CUENTA A TRANSACCIONAR YA POSEE REGISTRO EN LA APLICACION EB.SLV.CTA.SIMPLIFICADA.TXN
        CALL F.READ(DTL.APP.FN,ACC.SIMPLIFICADA.D,DTL.R.D,DTL.APP.F,DTL.ERR)
        IF DTL.ERR NE '' THEN
            DTL.R.D<EB.SLV25.CONTADOR.TRX> = 1
            DTL.R.D<EB.SLV25.TRX.DETALLE>  = NEW_TRX.DETAIL.D
            CALL F.WRITE (DTL.APP.FN, ACC.SIMPLIFICADA.D, DTL.R.D)
        END ;*END IF DTL.ERR NE ''
        ELSE
            TRX.ARR = DTL.R.D<EB.SLV25.TRX.DETALLE>
            FINDSTR YEAR_MONTH IN TRX.ARR SETTING V.FLD, V.VAL THEN
                    COUNT.ADD      = DTL.R.D<EB.SLV25.CONTADOR.TRX>+1
                    DETAIL.FOUND   = TRX.ARR<1,V.VAL>
                    CURRENT.AMOUNT = FIELDS(DETAIL.FOUND,'~',2)
                    NEW.AMOUNT     = CURRENT.AMOUNT + FT.AMOUNT
                    NEW.TRX.DETAIL = FIELDS(DETAIL.FOUND,'~',1):'~':NEW.AMOUNT
                    DTL.R.D<EB.SLV25.CONTADOR.TRX>      = COUNT.ADD
                    DTL.R.D<EB.SLV25.TRX.DETALLE,V.VAL> = NEW.TRX.DETAIL
                    CALL F.WRITE (DTL.APP.FN, ACC.SIMPLIFICADA.D, DTL.R.D)
            END 
            ELSE
                    COUNT.ADD                      = 1
                    UPDATE.DETAIL                  = DTL.R.D<EB.SLV25.TRX.DETALLE>:VM:NEW_TRX.DETAIL
                    DTL.R.D<EB.SLV25.CONTADOR.TRX> = COUNT.ADD
                    DTL.R.D<EB.SLV25.TRX.DETALLE>  = UPDATE.DETAIL
                    CALL F.WRITE (DTL.APP.FN, ACC.SIMPLIFICADA.D, DTL.R.D)
            END 
        END
    END 
    RETURN

PROCESS:
;*VALIDAMOS QUE LA CUENTA DE CREDITO SEA UNA CUENTA SIMPLIFICADA
    CALL F.READ(ACC.FN,ACC.SIMPLIFICADA,ACC.R,ACC.F,ACC.ERR)

    IF ACC.R<AC.CATEGORY> EQ CATEGORY.SIMP THEN
		
		ACC.SIMP.DIA=ACC.SIMPLIFICADA
		GOSUB VALIDAR.MONTO.DIA
		
        ;*VALIDAMOS SI LA CUENTA A TRANSACCIONAR YA POSEE REGISTRO EN LA APLICACION EB.SLV.CTA.SIMPLIFICADA.TXN
        CALL F.READ(DTL.APP.FN,ACC.SIMPLIFICADA,DTL.R,DTL.APP.F,DTL.ERR)

        IF DTL.ERR NE '' THEN
            DTL.R<EB.SLV25.CONTADOR.TRX> = 1
            DTL.R<EB.SLV25.TRX.DETALLE>  = NEW_TRX.DETAIL
            CALL F.WRITE (DTL.APP.FN, ACC.SIMPLIFICADA, DTL.R)
        END ;*END IF DTL.ERR NE ''
        ELSE
            TRX.ARR = DTL.R<EB.SLV25.TRX.DETALLE>
            FINDSTR YEAR_MONTH IN TRX.ARR SETTING V.FLD, V.VAL THEN
                    COUNT.ADD      = DTL.R<EB.SLV25.CONTADOR.TRX>+1
                    DETAIL.FOUND   = TRX.ARR<1,V.VAL>
                    CURRENT.AMOUNT = FIELDS(DETAIL.FOUND,'~',2)
                    NEW.AMOUNT     = CURRENT.AMOUNT + FT.AMOUNT
                    NEW.TRX.DETAIL = FIELDS(DETAIL.FOUND,'~',1):'~':NEW.AMOUNT
                    DTL.R<EB.SLV25.CONTADOR.TRX>      = COUNT.ADD
                    DTL.R<EB.SLV25.TRX.DETALLE,V.VAL> = NEW.TRX.DETAIL
                    CALL F.WRITE (DTL.APP.FN, ACC.SIMPLIFICADA, DTL.R)
            END ;*END FINDSTR
            ELSE
                    COUNT.ADD                    = 1
                    UPDATE.DETAIL                = DTL.R<EB.SLV25.TRX.DETALLE>:VM:NEW_TRX.DETAIL
                    DTL.R<EB.SLV25.CONTADOR.TRX> = COUNT.ADD
                    DTL.R<EB.SLV25.TRX.DETALLE>  = UPDATE.DETAIL
                    CALL F.WRITE (DTL.APP.FN, ACC.SIMPLIFICADA, DTL.R)
            END 
         END 
    END 
    RETURN

CAT.SIMP:

    FN.AA.PRODUCT.DESIGNER = 'F.AA.PRD.DES.ACCOUNT'
    F.AA.PRODUCT.DESIGNER = ''
    CALL OPF(FN.AA.PRODUCT.DESIGNER,F.AA.PRODUCT.DESIGNER)
    Y.PRODUCTO='CUENTA.AHORRO.SIM'
    SELECT.PROD.DES = "SELECT " : FN.AA.PRODUCT.DESIGNER : " WITH @ID LIKE '" : Y.PRODUCTO : "...'"
    CALL EB.READLIST(SELECT.PROD.DES, PROD.DES,'',NO.REC.PROD.DES, ERR.REC.PROD.DES)
    IF NO.REC.PROD.DES NE 0 THEN
        CALL F.READ(FN.AA.PRODUCT.DESIGNER,PROD.DES, PROD.DES.REC, F.AA.PRODUCT.DESIGNER, ERR.REC1)
        IF PROD.DES.REC THEN


            CALL F.READ(FN.AA.PRODUCT.DESIGNER,PROD.DES, PROD.DES.REC, F.AA.PRODUCT.DESIGNER, ERR.REC1)
            IF PROD.DES.REC THEN
                CATEGORY.SIMP = PROD.DES.REC<AA.AC.CATEGORY> ;*Obtener el parent para luego ir a traer sus propiedades
            END

        END

    END
    RETURN

VALIDAR.ACUMULADO.DIA:

        PARAM.DIA = 'CTA.SIMPLIFICADA.MONTO.DIA'
        CALL F.READ(FN.TABLE.PA, PARAM.DIA, R.TABLE.PA, F.TABLE.PA, F.ERR.PA)
        ACUMULADO.DIA=R.TABLE.PA<EB.SLV39.VALOR.PARAM>

RETURN

VALIDAR.MONTO.DIA:

    IDCUENTA=ACC.SIMP.DIA:'~':TODAY
    CALL F.READ(FN.TRX.DIA,IDCUENTA,TRX.DIA.R,F.TRX.DIA,TRX.DIA.ERR)
	
    IF TRX.DIA.ERR EQ '' TRX.DIA.ERR THEN
    CRT TRX.DIA.ERR
        CONT=TRX.DIA.R<EB.SLV96.CONTADOR>
        TRX.DIA.R<EB.SLV96.CONTADOR>=CONT+1
        MONTODIA=TRX.DIA.R<EB.SLV96.RESERVADO1>
        MONTONUEVO=FT.AMOUNT + MONTODIA
        IF MONTONUEVO GT ACUMULADO.DIA THEN
            STRERR ='EB-SIMP005'
            GOSUB CRT_ERROR
        END
        ELSE
        TRX.DIA.R<EB.SLV96.RESERVADO1>=MONTONUEVO
        CALL F.WRITE(FN.TRX.DIA,IDCUENTA,TRX.DIA.R)
*        CALL JOURNAL.UPDATE(FN.TRX.DIA)
        END

    END

    ELSE
	TRX.DIA.R<EB.SLV96.CONTADOR>=1
	TRX.DIA.R<EB.SLV96.RESERVADO1>=MONTO
	CALL F.WRITE(FN.TRX.DIA,IDCUENTA,TRX.DIA.R)
*	CALL JOURNAL.UPDATE(FN.TRX.DIA)
    END


    RETURN

CRT_ERROR:
    AV 	= 1
    ETEXT = STRERR
    CALL STORE.END.ERROR
    RETURN

    END

ESCRIBIR.ARCHIVO:
    DIR.NAME= 'SIMPLIFICADA'
    R.ID   = 'SLV.I.TRX.CTA.SIM_':TODAY:'.txt'
;* hacer que escriba un archivo

    OPENSEQ DIR.NAME,R.ID TO SEQ.PTR
    WRITESEQ TEXTO.ARCHIVO APPEND TO SEQ.PTR THEN
    END
    CLOSESEQ SEQ.PTR
    RETURN

    END
