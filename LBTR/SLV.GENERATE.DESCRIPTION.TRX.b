*-----------------------------------------------------------------------------
* <Rating>521</Rating>
*-----------------------------------------------------------------------------
SUBROUTINE SLV.GENERATE.DESCRIPTION.TRX(PRM.TRANSACTION.TYPE,PRM.FT,PRM.MOVEMENT.TYPE,PRM.RESPONSE)
*-----------------------------------------------------------------------------
*
*-----------------------------------------------------------------------------
* Modification History :
*-----------------------------------------------------------------------------
$INSERT I_COMMON
$INSERT I_EQUATE
$INSERT I_F.EB.SLV.KEYS.PARAMS
$INSERT I_F.EB.SLV.COLECTOR
$INSERT I_F.FUNDS.TRANSFER 
$INSERT I_F.AC.CHARGE.REQUEST
$INSERT I_F.EB.SLV.COL.FRONT.END
$INSERT I_F.USER
*-----------------------------------------------------------------------------

GOSUB INIT
GOSUB OPEN.FILE
GOSUB PROCESS 
RETURN

INIT:

FN.EB.KEYS.PARAM = 'F.EB.SLV.KEYS.PARAMS'
F.EB.KEYS.PARAM	 = '' 

FN.EB.SLV.COLECTOR = 'F.EB.SLV.COLECTOR'
F.EB.SLV.COLECTOR  = ''

FN.FUNDS.TRANSFER = 'F.FUNDS.TRANSFER'
F.FUNDS.TRANSFER = ''

FN.FUNDS.TRANSFER$HIS='F.FUNDS.TRANSFER$HIS'
F.FUNDS.TRANSFER$HIS=''

FN.AC.CHARGE.REQUEST = 'F.AC.CHARGE.REQUEST'
F.AC.CHARGE.REQUEST  = ''

FN.EB.SLV.COL.FRONT.END = 'F.EB.SLV.COL.FRONT.END'
F.EB.SLV.COL.FRONT.END  = ''

USR.APPLICATION = 'F.USER'
F.USR = ''

RETURN

OPEN.FILE:
CALL OPF(FN.EB.KEYS.PARAM,F.EB.KEYS.PARAM)
CALL OPF(FN.EB.SLV.COLECTOR,F.EB.SLV.COLECTOR)
CALL OPF(FN.FUNDS.TRANSFER,F.FUNDS.TRANSFER)
CALL OPF(FN.FUNDS.TRANSFER$HIS,F.FUNDS.TRANSFER$HIS)
CALL OPF(FN.AC.CHARGE.REQUEST,F.AC.CHARGE.REQUEST) 
CALL OPF(FN.EB.SLV.COL.FRONT.END,F.EB.SLV.COL.FRONT.END)
CALL OPF(USR.APPLICATION,F.USR)
RETURN

PROCESS:
ID.KEYS.PARAM = PRM.TRANSACTION.TYPE:'.':PRM.MOVEMENT.TYPE
*CRT 'ID.FT > ':PRM.FT
*CRT 'ID.KEYS.PARAM > ':ID.KEYS.PARAM
CALL F.READ(FN.EB.KEYS.PARAM,ID.KEYS.PARAM,CONFIG.KEYS.PARAM,F.EB.KEYS.PARAM,ERR.KEYS.PARAM)

;*IF LEFT(PRM.FT,2) EQ 'FT' AND PRM.FT EQ 'FT1522152G9B' OR PRM.FT EQ 'FT152212P8X4' THEN
IF LEFT(PRM.FT,2) EQ 'FT' THEN
DESCRIPTION      = CONFIG.KEYS.PARAM<EB.SLV18.DESCRIPCION>
NEW.DESCRIPTION  = ''

CALL F.READ(FN.FUNDS.TRANSFER,PRM.FT,RECORD.FT,F.FUNDS.TRANSFER,FT.ERROR)

IF FT.ERROR NE '' THEN
CALL F.READ.HISTORY(FN.FUNDS.TRANSFER$HIS,PRM.FT,RECORD.FT,F.FUNDS.TRANSFER$HIS,FT.ERROR.HIS)
END

TRX.TYPE = RECORD.FT<FT.TRANSACTION.TYPE>

CALL GET.LOC.REF('FUNDS.TRANSFER','LF.ID.COL.MOD',POS.COD.MOD)
CODIGO.MOD.COL = RECORD.FT<FT.LOCAL.REF, POS.COD.MOD>

IF TRX.TYPE NE 'AC67' THEN

CODIGO.COLECTOR.FT.AC67 = FIELD(CODIGO.MOD.COL,'-',1)
;*OBTENEMOS EL NOMBRE DEL COLECTOR Y LA AGENCIA DESDE DONDE SE REALIZO EL PAGO
GOSUB GET.NAME.COLECTOR.FT.AC67 

IF NOMBRE.COLECTOR.AC67 NE '' THEN

FINDSTR "[NOMBRECOLECTOR]" IN DESCRIPTION SETTING Ap, Vp THEN
   
   IF NOMBRE.COLECTOR.AC67 NE '' THEN
   NEW.DESCRIPTION = CHANGE(DESCRIPTION,"[NOMBRECOLECTOR]",NOMBRE.COLECTOR.AC67)
   END
   ELSE
   NEW.DESCRIPTION = CHANGE(DESCRIPTION,"[NOMBRECOLECTOR]","Colector")
   END
END
FINDSTR "[AGENCIA]" IN DESCRIPTION SETTING Ap1, Vp2 THEN
   ;*PROCEDEMOS A OBTENER LA AGENCIA DESDE LA APLICACION EB.SLV.COL.FRONT.END
   CALL F.READ(FN.EB.SLV.COL.FRONT.END,CODIGO.MOD.COL,RESPONSE.APP.LOCAL,F.EB.SLV.COL.FRONT.END,ERR.FRONT.END)
   AGENCIA = RESPONSE.APP.LOCAL<EB.SLV8.RESERVADO.23>
   NEW.DESCRIPTION = CHANGE(NEW.DESCRIPTION,"[AGENCIA]",AGENCIA)
END

;*LST.VALUES = CHANGE(RESPUESTA.SERVICIO.EXTERNO,'~',FM)
;*CODIGO.COLECTOR = LST.VALUES<3>
;*PRM.RESPONSE = NEW.DESCRIPTION:'~':CODIGO.COLECTOR

END ;*END IF RESPUESTA.SERVICIO.EXTERNO

END ;*TRX.TYPE
ELSE
CALL GET.LOC.REF('FUNDS.TRANSFER','LF.COD.CL', POS.CL.PEX)
CODIGO.COLECTOR.FT.AC67 = RECORD.FT<FT.LOCAL.REF, POS.CL.PEX>
*CRT 'CODIGO.COLECTOR.FT.AC67 > ':CODIGO.COLECTOR.FT.AC67
GOSUB GET.NAME.COLECTOR.FT.AC67

FINDSTR "[NOMBRECOLECTOR]" IN DESCRIPTION SETTING Ap, Vp THEN
     NEW.DESCRIPTION = CHANGE(DESCRIPTION,"[NOMBRECOLECTOR]",FIELD(NOMBRE.COLECTOR.AC67,'~',1))
     
END
FINDSTR "[AGENCIA]" IN DESCRIPTION SETTING Ap1, Vp2 THEN
     CAJERO = OPERATOR
     ;*CAJERO = 'R.ORTIZ'
     CALL F.READ(USR.APPLICATION,CAJERO,USR.DATA,USR.RS,USR.ERROR)
     ;*CRT 'USR.ERROR > ':USR.ERROR
     COMPANY = USR.DATA<EB.USE.COMPANY.CODE,1>
     ;*CRT 'COMPANY > ':COMPANY
     IF COMPANY EQ 'ALL' THEN
        COMPANY = 'SV0010001'
     END
     NEW.DESCRIPTION = CHANGE(NEW.DESCRIPTION,"[AGENCIA]",COMPANY)
END


END ;*END ELSE TRX.TYPE
END ;*END IF LEFT(PRM.FT,2)
ELSE
;*OBTENEMOS EL NOMBRE DEL COLECTOR
GOSUB GET.NAME.COLECTOR.CHG

DESCRIPTION      = CONFIG.KEYS.PARAM<EB.SLV18.DESCRIPCION>
NEW.DESCRIPTION  = ''

IF RESPUESTA.SERVICIO.EXTERNO.CHG NE '' THEN
   REPLACE.COLECTORNAME = CHANGE(DESCRIPTION,"[NOMBRECOLECTOR]",RESPUESTA.SERVICIO.EXTERNO.CHG)
   REPLACE.COMPANY      = CHANGE(REPLACE.COLECTORNAME,"[AGENCIA]","") 
   
END ;*END IF RESPUESTA.SERVICIO.EXTERNO.XHG NE ''
ELSE
   NEW.DESCRIPTION = CHANGE(DESCRIPTION,"[NOMBRECOLECTOR]",'')
END ;*END ELSE RESPUESTA.SERVICIO.EXTERNO.XHG NE ''

END ;*END ELSE LEFT(PRM.FT,2)

PRM.RESPONSE = NEW.DESCRIPTION
*CRT 'PRM.RESPONSE > ':PRM.RESPONSE
RETURN

GET.INFORMATION.TRX.EXT:
    THIS.PACKAGE.CLASS ="com.bancoazul.collector.Collector"
    THIS.METHOD.CLT= "getInformationFT"
    CALLJ.ARGUMENTS.CLT = PRM.FT
    CALLJ.ERROR.SMS = " "
    CALLJ.RESPONSE.CLT = " "
;*LLAMADA AL METODO CALLJ
    CALL EB.CALLJ(THIS.PACKAGE.CLASS,THIS.METHOD.CLT,CALLJ.ARGUMENTS.CLT,CALLJ.RESPONSE.CLT,CALLJ.ERROR.CLT)
    RESPUESTA.SERVICIO.EXTERNO = CHANGE(CALLJ.RESPONSE.CLT,'"','')
    
    IF LEFT(RESPUESTA.SERVICIO.EXTERNO,3) EQ '|ER' THEN
      RESPUESTA.SERVICIO.EXTERNO = 'Colector~Colector~Colector'
    END
    ELSE IF LEFT(RESPUESTA.SERVICIO.EXTERNO,3) EQ '|ER' THEN
      RESPUESTA.SERVICIO.EXTERNO = 'Colector~Colector~Colector'
    END
    ELSE
      RESPUESTA.SERVICIO.EXTERNO = RESPUESTA.SERVICIO.EXTERNO
    END
RETURN

GET.NAME.COLECTOR.CHG:
;*OBTENEMOS EL CODIGO DE COLECTOR
CALL F.READ(FN.AC.CHARGE.REQUEST,PRM.FT,RESPONSE.CHG,F.AC.CHARGE.REQUEST,ERR.CHG)
CALL GET.LOC.REF('AC.CHARGE.REQUEST','LF.COD.CL', POS.CL.CHG)
CODIGO.COLECTOR = RESPONSE.CHG<CHG.LOCAL.REF, POS.CL.CHG>

THIS.PACKAGE.CLASS ="com.bancoazul.collector.Collector";* "com.bancoazul.t24colecturia.ColectorPEXMWS"
THIS.METHOD.CLT= "getCollectorName"
CALLJ.ARGUMENTS.CLT = CODIGO.COLECTOR
CALLJ.ERROR.SMS = " "
CALLJ.RESPONSE.CLT = " "
;*LLAMADA AL METODO CALLJ
CALL EB.CALLJ(THIS.PACKAGE.CLASS,THIS.METHOD.CLT,CALLJ.ARGUMENTS.CLT,CALLJ.RESPONSE.CLT,CALLJ.ERROR.CLT)
RESPUESTA.SERVICIO.EXTERNO.CHG = CHANGE(CALLJ.RESPONSE.CLT,'"','')

RETURN

GET.NAME.COLECTOR.FT.AC67:
;*OBTENEMOS EL CODIGO DE COLECTOR
THIS.PACKAGE.CLASS ="com.bancoazul.collector.Collector";* "com.bancoazul.t24colecturia.ColectorPEXMWS"
THIS.METHOD.CLT= "getCollectorName"
CALLJ.ARGUMENTS.CLT = CODIGO.COLECTOR.FT.AC67
CALLJ.ERROR.SMS = " "
CALLJ.RESPONSE.CLT = " "
;*LLAMADA AL METODO CALLJ
CALL EB.CALLJ(THIS.PACKAGE.CLASS,THIS.METHOD.CLT,CALLJ.ARGUMENTS.CLT,CALLJ.RESPONSE.CLT,CALLJ.ERROR.CLT)
NOMBRE.COLECTOR.AC67 = CHANGE(CALLJ.RESPONSE.CLT,'"','')
;*CRT 'NOMBRE.COLECTOR.AC67 > ':NOMBRE.COLECTOR.AC67
RETURN


ESCRIBIR.ARCHIVO:
    DIR.NAME= 'MHLogs'
    R.ID = 'DESCRIPTION_GENE.':TODAY:'.txt'
	;* hacer que escriba un archivo
    OPENSEQ DIR.NAME,R.ID TO SEQ.PTR
    WRITESEQ TEXTO.ARCHIVO APPEND TO SEQ.PTR THEN
    END
    
    CLOSESEQ SEQ.PTR
RETURN

END
