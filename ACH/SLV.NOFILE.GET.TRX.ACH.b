*-----------------------------------------------------------------------------
* <Rating>-57</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE SLV.NOFILE.GET.TRX.ACH(ENQ.DATA)
*-----------------------------------------------------------------------------
*
*-----------------------------------------------------------------------------
* Modification History :
*-----------------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_ENQUIRY.COMMON
    $INSERT I_F.EB.SLV.ACUMULADOR.ACH
    $INSERT I_F.EB.SLV.TRANSACTION.ACH
    $INSERT I_F.EB.SLV.CAT.TRX.ACH
    $INSERT I_System
    $INSERT I_CustomerService_Mandates
*-----------------------------------------------------------------------------

    GOSUB INIT
    GOSUB OPEN.FILE
    GOSUB GET.FILTERS
    GOSUB PROCESS
    RETURN

INIT:
    FN.ACUMULADOR.ACH = 'F.EB.SLV.ACUMULADOR.ACH'
    F.ACUMULADOR.ACH  = ''
    FN.TRX.ACH        = 'F.EB.SLV.TRANSACTION.ACH'
    F.TRX.ACH         = ''
    FN.CAT.ACH        = 'F.EB.SLV.CAT.TRX.ACH'
    F.CAT.ACH         = ''
    RETURN

OPEN.FILE:
    CALL OPF(FN.ACUMULADOR.ACH,F.ACUMULADOR.ACH)
    CALL OPF(FN.TRX.ACH,F.TRX.ACH)
    CALL OPF(FN.CAT.ACH,F.CAT.ACH)
    RETURN

GET.FILTERS:

    LOCATE "CUSTOMER.ID" IN D.FIELDS<1> SETTING POSC.CUSTOMER THEN
    CUSTOMER  = D.RANGE.AND.VALUE<POSC.CUSTOMER>
    END

    LOCATE "DATE.FROM" IN D.FIELDS<1> SETTING POS.DATEFROM THEN
    INIT.DATE = D.RANGE.AND.VALUE<POS.DATEFROM>
    END

    LOCATE "DATE.TO" IN D.FIELDS<1> SETTING POS.DATETO THEN
    END.DATE  = D.RANGE.AND.VALUE<POS.DATETO>
    END

    LOCATE "STATUS" IN D.FIELDS<1> SETTING POS.STATUS THEN
    STATE     = D.RANGE.AND.VALUE<POS.STATUS>
    END

    LOCATE "PETICION" IN D.FIELDS<1> SETTING POS.PETICION THEN
    PETICION.F= D.RANGE.AND.VALUE<POS.PETICION>
    END

    CLIENTE          = CUSTOMER
    FECHA.INICIO     = INIT.DATE
    FECHA.FIN        = END.DATE
    ESTADO.FILTRO    = STATE

    NEW.FECHA.INICIO = SUBSTRINGS(FECHA.INICIO,1,6)
    NEW.FECHA.FIN    = SUBSTRINGS(FECHA.FIN,1,6)

    RETURN

PROCESS:

    BEGIN CASE
       CASE CLIENTE EQ 'ALL'
              SMS.CUSTOMERS   = System.getVariable('EXT.SMS.CUSTOMERS')
            ;*SMS.CUSTOMERS   = '107223':SM:'102537'
              LIST.CUSTOMERS  = SMS.CUSTOMERS
              TEXTO.ARCHIVO   = 'SMS.CUSTOMERS > ':SMS.CUSTOMERS
              GOSUB ESCRIBIR.ARCHIVO 
              GOSUB GET.LIST.CUSTOMER 
       CASE CLIENTE EQ 'PENAE'
            ;*EXT.ARRANGEMENT = System.getVariable('EXT.ARRANGEMENT')
            ;*LIST.CUSTOMERS  = EXT.ARRANGEMENT
            ;*GOSUB GET.LIST.CUSTOMER
       CASE 1
            GOSUB GET.TRANSACTION
    END CASE
           ENQ.DATA<-1> = T.INFO
           TEXTO.ARCHIVO = 'T.INFO > ':T.INFO
           GOSUB ESCRIBIR.ARCHIVO
    RETURN

GET.LIST.CUSTOMER:
    LOOP
    REMOVE CUSTOMER FROM LIST.CUSTOMERS SETTING POS.CUST
    WHILE CUSTOMER NE ''
       CLIENTE = CUSTOMER
       TEXTO.ARCHIVO = 'GET.LIST.CUSTOMER.... CLIENTE > ':CLIENTE
       GOSUB ESCRIBIR.ARCHIVO
       GOSUB GET.TRANSACTION
    REPEAT
RETURN

GET.TRANSACTION:
;*OBTENEMOS EL DETALLE DEL ACUMULADOR POR EL CLIENTE INGRESADO EN EL FILTRO DEL CRITERIO
    CALL F.READ(FN.ACUMULADOR.ACH,CLIENTE,ACH.DETAILS,F.ACUMULADOR.ACH,ACUMULADOR.ERR)

    IF ACUMULADOR.ERR EQ '' THEN
        DATE.LIST     = ACH.DETAILS<EB.SLV96.FECHA.MES>
        CONTADOR      = 1
        ARR.TRX.ACH   = ''
        ARR.DATA.ENQ  = ''

        ;*ITERAMOS SOBRE TODOS LOS MESES DEL REGISTRO DEL CLIENTE EN EL ACUMULADOR
        LOOP
            REMOVE MONTH FROM DATE.LIST SETTING POS.MONTH
        WHILE MONTH NE ''
            IF MONTH >= NEW.FECHA.INICIO AND MONTH <= NEW.FECHA.FIN THEN
                TRANSACTION.LIST = ACH.DETAILS<EB.SLV96.ID.FT,CONTADOR>
                LOOP
                    REMOVE TRX FROM TRANSACTION.LIST SETTING POS.TRX
                WHILE TRX NE ''
                    TRX.ARR         = MONTH:'*':TRX
                    ARR.TRX.ACH<-1> = TRX.ARR
                REPEAT

            END ;*END IF MONTH >= NEW.FECHA.INICIO AND MONTH <= NEW.FECHA.FIN THEN
            CONTADOR++
        REPEAT
    END ;*END IF ACUMULADOR.ERR EQ '' THEN
    GOSUB GET.DATA.APP.TRANSACTION.APP
    RETURN

GET.DATA.APP.TRANSACTION.APP:
    LOOP
        REMOVE FT FROM ARR.TRX.ACH SETTING POS.FT
    WHILE FT NE ''
        FT.ACH = FIELDS(FT,'*',2)
        ;*OBTENEMOS EL DETALLE DE LA FT EN LA APLICACION EB.SLV.TRANSACTION.ACH
        CALL F.READ(FN.TRX.ACH,FT.ACH,FT.DETAILS,F.TRX.ACH,FT.ERR)
        GOSUB GET.VALUES.TRANSACTION.ACH
        IF ESTADO.FILTRO EQ 'ALL'  AND PETICION EQ PETICION.F THEN
            LINE.ENQ = CLIENTE.AZUL:'*':CTA.CLIENTE.AZUL:'*':TIPO.PROD.AZUL:'*':BANCO.BENEFICIARIO:'*':CLIENTE.BENEFICIARIO:'*':CTA.CLIENTE.BENEF:'*':TIPO.PROD.BENEF:'*':ID.FT:'*':MONTO:'*':ESTADO:'*':CANAL:'*':FECHA.EJECUCION:'*':FECHA.PAGO:'*':CREARING.DATE:'*':PETICION:'*':USUARIO.CREADOR:'*':COMISION:'*':CARGO.TOTAL:'*':ID.BENEFICIARIO:'*':FECHA.UPD:'*':SUB.TRANSACTION:'*':PROPOSITO:'*':EMAIL.BENEF:'*':BANK.NAME.BEN:'*':NAME.BENEF:'*':CITY.OF.BIRTH:'*':PERSON.TYPE:'*':FECHA.NACIMIENTO:'*':COUNTRY.B:'*':COUNTRY.R:'*':CIVIL.STATUS:'*':IDENTYPE:'*':PROFESSION:'*':HOME.ADD:'*':PAID.ACCU:'*':TAX.IDEN:'*':TAX.REG:'*':RESERVADO2
            T.INFO<-1> = LINE.ENQ
            ;*CRT '>> ':T.INFO
        END ;*END IF ESTADO EQ ESTADO.FILTRO THEN
        ELSE
            IF ESTADO EQ ESTADO.FILTRO  AND PETICION EQ PETICION.F THEN
               LINE.ENQ = CLIENTE.AZUL:'*':CTA.CLIENTE.AZUL:'*':TIPO.PROD.AZUL:'*':BANCO.BENEFICIARIO:'*':CLIENTE.BENEFICIARIO:'*':CTA.CLIENTE.BENEF:'*':TIPO.PROD.BENEF:'*':ID.FT:'*':MONTO:'*':ESTADO:'*':CANAL:'*':FECHA.EJECUCION:'*':FECHA.PAGO:'*':CREARING.DATE:'*':PETICION:'*':USUARIO.CREADOR:'*':COMISION:'*':CARGO.TOTAL:'*':ID.BENEFICIARIO:'*':FECHA.UPD:'*':SUB.TRANSACTION:'*':PROPOSITO:'*':EMAIL.BENEF:'*':BANK.NAME.BEN:'*':NAME.BENEF:'*':CITY.OF.BIRTH:'*':PERSON.TYPE:'*':FECHA.NACIMIENTO:'*':COUNTRY.B:'*':COUNTRY.R:'*':CIVIL.STATUS:'*':IDENTYPE:'*':PROFESSION:'*':HOME.ADD:'*':PAID.ACCU:'*':TAX.IDEN:'*':TAX.REG:'*':RESERVADO2
               T.INFO<-1> = LINE.ENQ
               ;*CRT '>> ':T.INFO
            END ;*END IF ESTADO EQ ESTADO.FILTRO THEN
        END
        
    REPEAT
    ;*ENQ.DATA<-1> = T.INFO
    RETURN

GET.VALUES.TRANSACTION.ACH:
    CLIENTE.AZUL         	= FT.DETAILS<EB.SLV98.CLIENTE.AZUL>
    CTA.CLIENTE.AZUL	    = FT.DETAILS<EB.SLV98.CTA.CLIENTE.AZUL>
    TIPO.PROD.AZUL			= FT.DETAILS<EB.SLV98.TIPO.PROD.AZUL>
    BANCO.BENEFICIARIO		= FT.DETAILS<EB.SLV98.BANCO.BENEF>
    CLIENTE.BENEFICIARIO	= FT.DETAILS<EB.SLV98.CLIENTE.BENEF>
    CTA.CLIENTE.BENEF		= FT.DETAILS<EB.SLV98.CTA.CLIENTE.BENEF>
    TIPO.PROD.BENEF			= FT.DETAILS<EB.SLV98.TIPO.PROD.BENEF>
    ID.FT					= FT.DETAILS<EB.SLV98.ID.FT>
    MONTO					= FT.DETAILS<EB.SLV98.MONTO>
    ESTADO					= FT.DETAILS<EB.SLV98.STATUS>
;*OBTENEMOS LA DESCRIPCION DEL ESTADO DESDE LA APLICACION EB.SLV.CAT.TRX.ACH
    CALL F.READ(FN.CAT.ACH,ESTADO,CAT.R,F.CAT.ACH,ERR.CAT.ACH)
    ESTADO.DESCRIPCION      = CAT.R<EB.SLV33.DESCRIPCION>
    CANAL					= FT.DETAILS<EB.SLV98.CANAL>
    FECHA.EJECUCION			= FT.DETAILS<EB.SLV98.PROCESSING.DATE>
    FECHA.PAGO				= FT.DETAILS<EB.SLV98.PAYMENT.DATE>
    CREARING.DATE			= FT.DETAILS<EB.SLV98.CREARING.DATE>
    PETICION				= FT.DETAILS<EB.SLV98.PETICION>
    USUARIO.CREADOR			= FT.DETAILS<EB.SLV98.USUARIO.CREADOR>
    COMISION				= FT.DETAILS<EB.SLV98.COMISION>
    CARGO.TOTAL				= FT.DETAILS<EB.SLV98.CARGO.TOTAL>
    ID.BENEFICIARIO			= FT.DETAILS<EB.SLV98.ID.BENEFICIARIO>
    FECHA.UPD				= FT.DETAILS<EB.SLV98.FECHA.UPD>
    SUB.TRANSACTION			= FT.DETAILS<EB.SLV98.SUB.TRANSACTION>
    PROPOSITO				= FT.DETAILS<EB.SLV98.PROPOSITO>
    EMAIL.BENEF				= FT.DETAILS<EB.SLV98.EMAIL.BENEF>
    BANK.NAME.BEN			= FT.DETAILS<EB.SLV98.BANK.NAME.BEN>
    NAME.BENEF				= FT.DETAILS<EB.SLV98.NAME.BENEF>
    CITY.OF.BIRTH			= FT.DETAILS<EB.SLV98.CITY.OF.BIRTH>
    PERSON.TYPE				= FT.DETAILS<EB.SLV98.PERSON.TYPE>
    FECHA.NACIMIENTO		= FT.DETAILS<EB.SLV98.DATE.OF.BIRTH>
    COUNTRY.B				= FT.DETAILS<EB.SLV98.COUNTRY.B>
    COUNTRY.R				= FT.DETAILS<EB.SLV98.COUNTRY.R>
    CIVIL.STATUS			= FT.DETAILS<EB.SLV98.CIVIL.STATUS>
    IDENTYPE				= FT.DETAILS<EB.SLV98.IDENTYPE>
    PROFESSION				= FT.DETAILS<EB.SLV98.PROFESSION>
    HOME.ADD				= FT.DETAILS<EB.SLV98.HOME.ADD>
    PAID.ACCU				= FT.DETAILS<EB.SLV98.PAID.ACCU>
    TAX.IDEN				= FT.DETAILS<EB.SLV98.TAX.IDEN>
    TAX.REG					= FT.DETAILS<EB.SLV98.TAX.REG>
    RESERVADO2              = FT.DETAILS<EB.SLV98.RESERVADO.2>
    RETURN

ESCRIBIR.ARCHIVO:
    DIR.NAME= 'FATCA'
    R.ID   = 'SLV.NOFILE.GET.TRX.ACH_':TODAY:'.txt'
;* hacer que escriba un archivo

    OPENSEQ DIR.NAME,R.ID TO SEQ.PTR
    WRITESEQ TEXTO.ARCHIVO APPEND TO SEQ.PTR THEN
    END
    CLOSESEQ SEQ.PTR
    RETURN
    
    END
