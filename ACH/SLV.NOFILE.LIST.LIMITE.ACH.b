*-----------------------------------------------------------------------------
* <Rating>-78</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE SLV.NOFILE.LIST.LIMITE.ACH(ENQ.DATA)
*-----------------------------------------------------------------------------
*
*-----------------------------------------------------------------------------
* Modification History :
*-----------------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.EB.SLV.ACUMULADOR.ACH
    $INSERT I_F.CUSTOMER
    $INSERT I_F.EB.SLV.TRANSACTION.ACH
    $INSERT I_F.EB.SLV.GLOBAL.PARAM
    $INSERT I_F.EB.SLV.KEYS.PARAMS
    $INSERT I_ENQUIRY.COMMON
*-----------------------------------------------------------------------------

    GOSUB INIT
    GOSUB OPEN.FILE
    GOSUB ENQUIRY.FILTERS
    GOSUB VAR.GLOBAL.PGM
    GOSUB PROCESS
    RETURN

INIT:
    FN.ACUMULADOR.ACH  = 'F.EB.SLV.ACUMULADOR.ACH'
    F.ACUMULADOR.ACH   = ''
    FN.TRANSACTION.ACH = 'F.EB.SLV.TRANSACTION.ACH'
    F.TRANSACTION.ACH  = ''
    FN.CUSTOMER        = 'F.CUSTOMER'
    F.CUSTOMER         = ''
    FN.GLOBAL.PARAM    = 'F.EB.SLV.GLOBAL.PARAM'
    F.GLOBAL.PARAM     = ''
    FN.KEYS.PARAMS     = 'F.EB.SLV.KEYS.PARAMS'
    F.KEYS.PARAMS      = ''
    RETURN

OPEN.FILE:
    CALL OPF(FN.ACUMULADOR.ACH,F.ACUMULADOR.ACH)
    CALL OPF(FN.TRANSACTION.ACH,F.TRANSACTION.ACH)
    CALL OPF(FN.CUSTOMER,F.CUSTOMER)
    CALL OPF(FN.GLOBAL.PARAM,F.GLOBAL.PARAM)
    CALL OPF(FN.KEYS.PARAMS,F.KEYS.PARAMS)
    RETURN

ENQUIRY.FILTERS:

    LOCATE "FECHA" IN D.FIELDS<1> SETTING POSC.FECHA THEN
    FECHA     = D.RANGE.AND.VALUE<POSC.FECHA>
    END

    LOCATE "ESTADO" IN D.FIELDS<1> SETTING POSC.ESTADO THEN
    ESTADO.F  = D.RANGE.AND.VALUE<POSC.ESTADO>
    END

    CRT 'FECHA > ':FECHA:' | ESTADO > ':ESTADO.F

    DATES.ENQ = SUBSTRINGS(FECHA,1,6)
    RETURN

VAR.GLOBAL.PGM:
    EQU ID.LIMITES.ACH  TO 'SLV.LIMITES.ACH'
    EQU LIMITE.DIARIO   TO 'LIMITE.DIARIO'
    EQU LIMITE.MENSUAL  TO 'LIMITE.MENSUAL'
    EQU LIMITE.ST.ACH   TO 'SLV.LIMITE.ESTADOS.ACH'
    RETURN

PROCESS:
    STMT.CUSTOMERS.ACUMULADOR = "SELECT ":FN.ACUMULADOR.ACH
    CALL EB.READLIST (STMT.CUSTOMERS.ACUMULADOR, KEY.LIST, LIST.NAME, CONTADOR, SYSTEM.RETURN.CODE)

    LOOP
        REMOVE CUSTOMER FROM KEY.LIST SETTING POS.CUSTOMER
    WHILE CUSTOMER NE ''
        ;*OBTENEMOS EL DETALLE DEL CLIENTE
        CALL F.READ(FN.CUSTOMER,CUSTOMER,CUSTOMER.R,F.CUSTOMER,CUSTOMER.ERR)
        CALL GET.LOC.REF ('CUSTOMER','SEGMENT',POS.SEGMENT)
        TIPO.CLIENTE   = CUSTOMER.R<EB.CUS.LOCAL.REF,POS.SEGMENT>
        NOMBRE.CLIENTE = CUSTOMER.R<EB.CUS.SHORT.NAME>
        BEGIN CASE
            CASE TIPO.CLIENTE EQ 1
                TIPO.BANCA   = 'BP'
                TIPO.CLIENTE = 'Cliente Natural'
            CASE TIPO.CLIENTE EQ 2
                TIPO.BANCA   = 'EM'
                TIPO.CLIENTE = 'Cliente Juridico'
        END CASE ;*END CASE
        ;*OBTENEMOS EL MONTO LIMITE DIARIO Y MENSUAL DE LAS TRANSACCIONES ACH
        GOSUB LIMITES.TRX.ACH
        GOSUB TRANSACCCIONES.FT.ACUMULADOR
        GOSUB DETALLE.TRANSACCIONES.ACH
        GOSUB CALCULAR.MONTO.DIARIO
        GOSUB CALCULAR.MONTO.MENSUAL
        T.INFO<-1> = CUSTOMER:'*':MONTO.LIMITE.DIARIO:'*':MONTO.LIMITE.MENSUAL:'*':TOTAL.MONTO.DIARIO:'*':TOTAL.MONTO.MENSUAL:'*':NOMBRE.CLIENTE:'*':TIPO.CLIENTE
        CRT 'CLIENTE > ':CUSTOMER:' | MONTO.LIMITE.DIARIO > ':MONTO.LIMITE.DIARIO:' | MONTO.LIMITE.MENSUAL > ':MONTO.LIMITE.MENSUAL:' | TOTAL.MONTO.DIARIO > ':TOTAL.MONTO.DIARIO:' | TOTAL.MONTO.MENSUAL > ':TOTAL.MONTO.MENSUAL:' | NOMBRE.CLIENTE > ':NOMBRE.CLIENTE:' | TIPO.CLIENTE > ':TIPO.CLIENTE
    REPEAT
    ENQ.DATA = T.INFO
    RETURN

CALCULAR.MONTO.DIARIO:
    TOTAL.MONTO.DIARIO = 0
    LOOP
        REMOVE MONTOS.DIARIOS FROM ARR.MONTOS.DIARIOS SETTING POS.MONTO
    WHILE MONTOS.DIARIOS NE ''
        MONTO.DATA  = FIELDS(MONTOS.DIARIOS,'~',1)
        ESTADO.DATA = FIELDS(MONTOS.DIARIOS,'~',2)

        BEGIN CASE
            CASE ESTADO.F EQ ''
                TOTAL.MONTO.DIARIO += MONTO.DATA
            CASE ESTADO.F EQ ESTADO.DATA
                TOTAL.MONTO.DIARIO += MONTO.DATA
        END CASE


    REPEAT
    RETURN

CALCULAR.MONTO.MENSUAL:
    TOTAL.MONTO.MENSUAL = 0
    LOOP
        REMOVE MONTOS.MENSUALES FROM ARR.MONTOS.MENSUALES SETTING POS.MONTO.M
    WHILE MONTOS.MENSUALES NE ''
        MONTO     = FIELDS(MONTOS.MENSUALES,'~',1)
        ESTADO.D  = FIELDS(MONTOS.MENSUALES,'~',2)

        BEGIN CASE
            CASE ESTADO.F EQ ''
                TOTAL.MONTO.MENSUAL += MONTO
            CASE ESTADO.F EQ ESTADO.D
                TOTAL.MONTO.MENSUAL += MONTO
 
        END CASE


    REPEAT
    RETURN

DETALLE.TRANSACCIONES.ACH:
    ARR.MONTOS.DIARIOS   = ''
    ARR.MONTOS.MENSUALES = ''

    CALL F.READ(FN.GLOBAL.PARAM,LIMITE.ST.ACH,ESTADO.R,F.GLOBAL.PARAM,GLB.ERR)
    LIMITE.ESTADO.VALIDO = ESTADO.R<EB.SLV39.VALOR.PARAM>

;*OBTENEMOS EL DETALLE DE CADA ID DE FT
    LOOP
        REMOVE ID.FT FROM ARR.ID.FT SETTING POS.FT
    WHILE ID.FT NE ''
        CALL F.READ(FN.TRANSACTION.ACH,ID.FT,TRX.ACH.R,F.TRANSACTION.ACH,TRX.ERR)

        ESTADO.TRX.ACH = TRX.ACH.R<EB.SLV98.STATUS>
        MONTO          = TRX.ACH.R<EB.SLV98.CARGO.TOTAL>
        FECHA          = TRX.ACH.R<EB.SLV98.CREARING.DATE>
*
*        *            CRT 'ESTADO > ':ESTADO.TRX.ACH
*        *            CRT 'MONTO > ':MONTO
*        *            CRT 'FECHA > ':FECHA
*        *            CRT 'ID.FT > ':ID.FT

        IF ESTADO.TRX.ACH < LIMITE.ESTADO.VALIDO THEN

            IF FECHA EQ TODAY THEN
                ARR.MONTOS.DIARIOS<-1>   = MONTO:'~':ESTADO.TRX.ACH
            END ;*END IF FECHA EQ TODAY THEN
            ELSE
            ARR.MONTOS.MENSUALES<-1> = MONTO:'~':ESTADO.TRX.ACH
        END ;*END ELSE FECHA EQ TODAY THEN

        END ;*END IF ESTADO.TRX.ACH < LIMITE.ESTADO.VALIDO THEN

    REPEAT ;*END WHILE ID.FT NE ''
*    CRT 'ARR.MONTOS.DIARIOS > ':ARR.MONTOS.DIARIOS
*    CRT 'ARR.MONTOS.MENSUALES > ':ARR.MONTOS.MENSUALES
    RETURN

TRANSACCCIONES.FT.ACUMULADOR:
;*OBTENEMOS TODAS LAS TRANSACCIONES DE ACUERDO AL MES INGRESADO POR EL USUARIO
    CALL F.READ(FN.ACUMULADOR.ACH,CUSTOMER,ACUMULADOR.R,F.ACUMULADOR.ACH,ACUMULADOR.ERR)
    MONTHS    = ACUMULADOR.R<EB.SLV96.FECHA.MES>
    ARR.ID.FT = ''
    LOOP
        REMOVE MONTH FROM MONTHS SETTING POS.MONTH
    WHILE MONTH NE ''
        IF MONTH EQ DATES.ENQ THEN
            ARR.ID.FT<-1> = ACUMULADOR.R<EB.SLV96.ID.FT>
        END ;*END IF MONTH EQ DATES.ENQ THEN
    REPEAT ;*END WHILE MONTH NE ''

    RETURN

LIMITES.TRX.ACH:
;*OBTENEMOS EL DETALLE DE LOS LIMITES
    CALL F.READ(FN.KEYS.PARAMS,ID.LIMITES.ACH,KY.PRM.R,F.KEYS.PARAMS,KEYS.ERR)
    LIST.PARAM = KY.PRM.R<EB.SLV18.PARAM.ID>
    CONTADOR   = 1
    LOOP
        REMOVE PARAM FROM LIST.PARAM SETTING POS.PARAM
    WHILE PARAM NE ''
        IF PARAM EQ TIPO.BANCA THEN
            LIST.LIMITES = KY.PRM.R<EB.SLV18.VALOR,CONTADOR>
            LOOP
                REMOVE LIMITE FROM LIST.LIMITES SETTING POS.LIMITE
            WHILE LIMITE NE ''
                DESC.LIMITE  = FIELDS(LIMITE,'~',1)
                MONTO.LIMITE = FIELDS(LIMITE,'~',2)
                BEGIN CASE
                    CASE DESC.LIMITE EQ LIMITE.DIARIO
                        MONTO.LIMITE.DIARIO  = MONTO.LIMITE
                    CASE DESC.LIMITE EQ LIMITE.MENSUAL
                        MONTO.LIMITE.MENSUAL = MONTO.LIMITE
                    CASE 1
                END CASE ;*END CASE
            REPEAT ;*END WHILE LIMITE NE ''
        END ;*END IF PARAM EQ RIGHT(TIPO.BANCA,2) THEN
        CONTADOR++
    REPEAT ;*END WHILE PARAM NE ''

    RETURN ;*END SUBPROCESS LIMITES.TRX.ACH


    END
